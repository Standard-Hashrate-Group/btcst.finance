{"version":3,"sources":["src/components/Heading.tsx","src/components/Border.tsx","src/components/Column.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/components/Input.tsx","src/components/InfoBox.tsx","src/components/TokenInput.tsx","src/components/ErrorMessage.tsx","src/components/FetchingButton.tsx","src/components/InsufficientBalanceButton.tsx","src/components/Notice.tsx","src/components/Meta.tsx","src/components/Expandable.tsx","src/components/ApproveButton.tsx","index.tsx","src/components/TokenAddressInput.tsx","src/utils/tron/utils/base64.js","src/utils/tron/utils/bytes.js","src/utils/tron/utils/code.js","src/utils/tron/utils/base58.js","src/utils/tron/utils/ethersUtils.js","src/utils/tron/utils/crypto.js","src/utils/tron/utils/address.js","src/utils/tron/utils/accounts.js","src/utils/tron/utils/index.js","src/utils/tron/index.ts","src/hooks/useSTBridgeState.tsx","src/components/CloseIcon.tsx","src/components/Selectable.tsx","src/components/SelectIcon.tsx","src/components/Select.tsx","src/components/ItemSeparator.tsx","src/screens/SHTOurBridgeScreen.tsx"],"names":["Heading","props","accent","useColors","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","IS_DESKTOP","paddingBottom","tiny","text","buttonText","type","size","title","onPress","onPressButton","color","buttonStyle","paddingHorizontal","Border","border","width","backgroundColor","marginTop","Column","View","noTopMargin","Platform","OS","large","normal","SocialIcon","darkMode","useContext","GlobalContext","background","textLight","light","iconColor","undefined","borderWidth","borderColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onMedium","onTg","onPressDiscord","FlexView","justifyContent","name","raised","reverse","reverseColor","containerStyle","flags","us","require","uk","cn","kr","Flag","locale","history","useHistory","location","useLocation","TouchableHighlight","push","pathname","marginHorizontal","Image","source","WebFooter","onPressAlchemy","padding","Text","note","Constants","manifest","version","Input","textDark","textMedium","onChangeText","useCallback","onError","errors","forbidden","forEach","validation","match","regexp","error","allowed","length","join","inputStyle","fontFamily","minHeight","outline","labelStyle","placeholderTextColor","errorStyle","InfoBox","backgroundLight","borderDark","useStyles","MaxButton","onPressMax","token","balance","isETH","fee","pow10","gt","sub","ethers","constants","Zero","updateAmount","formatBalance","decimals","position","right","bottom","maxButtonText","symbol","TokenInput","onAmountChanged","parseBalance","e","endsWith","indexOf","label","value","amount","placeholder","keyboardType","autoFocus","inputContainerStyle","borderBottomWidth","paddingTop","hideMaxButton","ErrorMessage","code","message","FetchingButton","t","useTranslation","InsufficientBalanceButton","Notice","borderStyle","clear","titleStyle","paddingVertical","alignSelf","Meta","url","suffix","textDecorationLine","Expandable","useState","expanded","setExpanded","shouldExpand","onExpand","display","children","ApproveButton","approveToken","EthersContext","loading","setLoading","a","async","address","spender","tx","wait","onSuccess","hidden","isServer","process","hoverListener","hasMouse","window","refs","mousePosition","x","y","hover","target","hoverFunc","containsEvent","r","previousHoverFunc","unhover","document","event","add","ref","remove","createHoverListener","Hoverable","rest","hostRef","React","hr","setHovered","hovered","parent","enhanceScrollView","WrappedComponent","EnhancedScrollView","onScroll","scrollEventThrottle","forwardedRef","setRef","setLocalRef","getForwardedRef","setAndForwardRef","hostNode","interactionState","TokenAddressInput","onAddressChanged","Base64","this","_keyStr","encode","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","i","charCodeAt","isNaN","charAt","encodeIgnoreUtf8","inputBytes","decode","replace","String","fromCharCode","_utf8_decode","decodeToByteArray","_out2ByteArray","utftext","byteArray","Array","c","_utf8_encode","string","n","c2","c3","byte2hexStr","byte","Error","str","bytesToString","arr","one","toString","v","bytesLength","store","slice","st","parseInt","hextoString","hex","split","out","tmp","byteArray2hexStr","base64DecodeFromString","string64","base64EncodeToString","bytes","bin2String","array","arrayEquals","array1","array2","strict","JSON","stringify","stringToBytes","len","hexChar2byte","d","isHexChar","hexStr2byteArray","j","k","strToDate","test","tempStrs","dateStrs","year","month","day","timeStrs","hour","minute","second","Date","isNumber","getStringType","ALPHABET","ALPHABET_MAP","encode58","buffer","digits","carry","map","digit","decode58","keccak256","utils","sha256","toUtf8Bytes","toUtf8String","recoverAddress","SigningKey","AbiCoder","getBase58CheckAddress","addressBytes","hash0","SHA256","checkSum","concat","decodeBase58Address","base58Sting","offset","checkSum1","signTransaction","priKeyBytes","transaction","signature","ECKeySign","txID","isArray","includes","arrayToBase64String","btoa","signBytes","privateKey","contents","getRowBytesFromTransactionBase64","base64Data","bytesDecode","proto","protocol","Transaction","deserializeBinary","getRawData","serializeBinary","genPriKey","priKeyHex","EC","genKeyPair","getPrivate","computeAddress","pubBytes","substring","getAddressFromPriKey","getPubKeyFromPriKey","decode58Check","addressStr","decodeCheck","decodeData","hash1","isAddressValid","base58Str","getBase58CheckAddressFromPriKeyBase64String","priKeyBase64String","getHexStrAddressFromPriKeyBase64String","getAddressFromPriKeyBase64String","pubkey","keyFromPrivate","getPublic","xHex","yHex","hashBytes","sign","s","id","recoveryParam","rHex","sHex","msgBytes","msgHex","passwordToAddress","password","pkToAddress","generateAccount","pubKeyBytes","publicKey","base58","isObject","obj","Object","prototype","call","isJson","parse","ex","isBoolean","bool","isBigNumber","number","BigNumber","constructor","isString","isFunction","isHex","isInteger","Number","hasProperty","property","hasOwnProperty","hasProperties","properties","mapEvent","data","block","block_number","timestamp","block_timestamp","contract","contract_address","event_name","transaction_id","result","resourceNode","resource_Node","_unconfirmed","unconfirmed","_fingerprint","fingerprint","padLeft","res","isNotNullOrUndefined","val","sleep","millis","Promise","resolve","setTimeout","accounts","crypto","ethersUtils","isAddress","err","useSTStakingState","provider","signer","getTokenAllowance","getTokenBalance","getTotalSupply","setAmount","otherSideAddress","setOtherSideAddress","bridgeActions","bridgeOut","claimOutBack","stoken","setSToken","setloading","stokenAllowed","setSTokenAllowed","yourTotalSToken","setYourTotalSToken","yourFreeToSendSToken","setYourFreeToSendSToken","yourSTokenStaked","setYourSTokenStaked","totalSTokenSupply","setTotalSTokenSupply","localTokenSuffix","setLocalTokenSuffix","entering","setEntering","leaving","setLeaving","addressIsValid","setAddressIsValid","txHappend","setTxHappend","sToken","BTCST","logoURI","from","useEffect","useAsyncEffect","minAllowance","pow","bridgeAddr","BRIDGE","btcstAddr","isProviderOnTron","TRON_ADDRESS_MAPPING","stokenAllowance","gte","ppp","account","getAccount","freeToMove","getFreeToTransferAmount","getAddress","viewUserInfo","userInfoInFarm","amnt","lockedAmnt","lockedAmount","TronUtil","onEnter","parsed","console","log","onLeave","CloseIcon","marginLeft","Selectable","overlay","activeOpacity","underlayColor","selected","SelectIcon","Item","paddingLeft","paddingRight","selectable","setOption","option","description","Select","options","key","Staking","state","onPressEx","onPressSwap","isZero","Button","STokenBalance","AmountInput","BridgeSelect","tron","bsc","OPTIONS","DestAddressInput","StakeInfo","isEmptyValue","youGet","BRIDGE_FEE","Controls","setError","StakeButton","SHTStakeScreen","Screen","Container","BackgroundImage","Content","Title"],"mappings":"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","file":"static/js/4.49ca7df4.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n    style?: TextStyle;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={props.fontWeight || \"bold\"}\n                disabled={props.disabled}\n                style={[{ flex: 1, fontSize: IS_DESKTOP ? 24 : 18, paddingBottom: Spacing.tiny }, props.style]}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                    buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = props => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: props.small ? Spacing.tiny : Spacing.small,\n                marginBottom: props.small ? Spacing.tiny : Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"http://twitter.com/BTCST2020\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/Standard-Hashrate-Group\", \"\", \"_blank\");\n    \n    const onMedium = useLinker(\"https://btcst.medium.com/\", \"\", \"_blank\");\n    // const onPressReddit = useLinker(\"https://www.reddit.com/user/BTCStandardHashrate\", \"\", \"_blank\");\n    const onTg = useLinker(\"https://t.me/BTCSTCommunity\",\"\",\"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.com/channels/791170396316893255/791170396765945886\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <SocialIcon type=\"medium\" onPress={onMedium} />\n            <SocialIcon type=\"telegram\" onPress={onTg} />\n            {/* <SocialIcon type=\"twitch\" onPress={onPressReddit} /> */}\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React from \"react\";\nimport { Image, TouchableHighlight, View } from \"react-native\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport Constants from \"expo-constants\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport useLinker from \"../../hooks/useLinker\";\nimport Column from \"../Column\";\nimport FlexView from \"../FlexView\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst flags = {\n    us: require(\"../../../assets/flags/us.png\"),\n    uk: require(\"../../../assets/flags/uk.png\"),\n    cn: require(\"../../../assets/flags/cn.png\"),\n    kr: require(\"../../../assets/flags/kr.png\")\n};\n\nconst WebFooter = () => {\n    const onPressAlchemy = useLinker(\n        \"https://certik.foundation/\",\n        \"\",\n        \"_blank\"\n    );\n    return (\n        <Column noTopMargin={true}>\n            <View style={{ width: \"100%\", padding: Spacing.normal, alignItems: \"center\" }}>\n                <TouchableHighlight onPress={onPressAlchemy}>\n                    <Image\n                        source={require(\"../../../assets/certik-logo-w.png\")}\n                        style={{ width: 168, height: 40, marginTop: Spacing.tiny }}\n                    />\n                </TouchableHighlight>\n                <SocialIcons />\n                <Text note={true} style={{ marginTop: Spacing.tiny }}>\n                    Built with ❤️ by Standard Hashrate (v{Constants.manifest.version})\n                </Text>\n                <FlexView style={{ marginTop: Spacing.small }}>\n                    <Flag name={\"uk\"} locale={\"en\"} />\n                    <Flag name={\"cn\"} locale={\"zh\"} />\n                    {/* <Flag name={\"kr\"} locale={\"ko\"} /> */}\n                </FlexView>\n            </View>\n        </Column>\n    );\n};\n\nconst Flag = ({ name, locale }) => {\n    const history = useHistory();\n    const location = useLocation();\n    const onPress = () => {\n        history.push(location.pathname + \"?locale=\" + locale);\n    };\n    return (\n        <TouchableHighlight onPress={onPress} style={{ marginHorizontal: 4 }}>\n            <Image source={flags[name]} style={{ width: 30, height: 20 }} />\n        </TouchableHighlight>\n    );\n};\n\nexport default WebFooter;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface Validation {\n    regexp: RegExp;\n    error: string;\n}\n\nexport interface InputProps extends NativeInputProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    allowed?: Validation[];\n    forbidden?: Validation[];\n    onError?: (error: string) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Input: FC<InputProps> = props => {\n    const { textDark, textMedium, textLight } = useColors();\n    const size = props.size || \"normal\";\n    const color = props.color || textDark;\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\n    const onChangeText = useCallback(\n        (text: string) => {\n            props.onChangeText?.(text);\n            props.onError?.(\"\");\n            const errors = [] as string[];\n            if (text !== \"\" && props.forbidden) {\n                props.forbidden.forEach(validation => {\n                    if (text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (text !== \"\" && props.allowed) {\n                props.allowed.forEach(validation => {\n                    if (!text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (errors.length > 0) {\n                props.onError?.(errors.join(\"\\n\"));\n            }\n        },\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\n    );\n    return (\n        <NativeInput\n            {...props}\n            inputStyle={[\n                { fontSize, fontFamily: \"regular\", paddingBottom: 4, color, marginTop: 0, minHeight: 32 },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\n                props.inputStyle\n            ]}\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\n            placeholderTextColor={props.placeholderTextColor || textLight}\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\n            onChangeText={onChangeText}\n        />\n    );\n};\n\nexport default Input;\n","import React, { PropsWithChildren, useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { backgroundLight, borderDark } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: darkMode ? borderDark : backgroundLight }),\n                    backgroundColor: backgroundLight,\n                    marginTop: Spacing.normal + Spacing.small,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\n\nexport default InfoBox;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isETH, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    token?: Token;\n    amount: string;\n    onAmountChanged: (amount: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenInput: FC<TokenInputProps> = props => {\n    const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.token && props.onAmountChanged) {\n                try {\n                    parseBalance(text, props.token.decimals);\n                    props.onAmountChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAmountChanged(text);\n                    }\n                }\n            }\n        },\n        [props.token, props.onAmountChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.amount}\n                    onChangeText={onChangeText}\n                    placeholder={\"0.0\"}\n                    keyboardType={\"decimal-pad\"}\n                    autoFocus={props.autoFocus || false}\n                    inputStyle={{ marginHorizontal: Spacing.tiny }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 15,\n                        paddingBottom: 2\n                    }}\n                />\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\n                    <MaxButton\n                        token={props.token}\n                        maxButtonText={props.maxButtonText}\n                        updateAmount={props.onAmountChanged}\n                    />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(() => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (isETH(props.token)) {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount]);\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 12 : 24 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || (IS_DESKTOP ? \"MAX \" + props.token.symbol : \"MAX\")}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n            />\n        </View>\n    );\n};\n\nexport default TokenInput;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst FetchingButton = () => {\n    const t = useTranslation();\n    return <Button title={t(\"fetching\")} disabled={true} />;\n};\nexport default FetchingButton;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    const t = useTranslation();\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { textLight } = useColors();\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || textLight;\n    return (\n        <View style={[props.clear ? {} : borderStyle, props.style]}>\n            <Text note={true} style={{ color }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React, { FC } from \"react\";\n\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    url?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const { textMedium, textLight, placeholder } = useColors();\n    const onPress = useLinker(props.url || \"\", \"\", \"_blank\");\n    const text = props.disabled\n        ? \"N/A\"\n        : props.text\n        ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n        : \"Fetching…\";\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4 }}>\n            <Text note={!IS_DESKTOP} fontWeight={\"bold\"} style={{ color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text\n                note={!IS_DESKTOP}\n                onPress={props.url ? onPress : undefined}\n                style={{\n                    color: props.disabled ? placeholder : props.text ? textMedium : textLight,\n                    textDecorationLine: props.url ? \"underline\" : \"none\"\n                }}>\n                {text}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","import React, { FC, ReactNode, useState } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Heading from \"./Heading\";\n\nexport interface ExpandableProps {\n    title: string;\n    expanded: boolean;\n    onExpand?: () => void;\n    style?: ViewStyle;\n    children?: ReactNode;\n}\n\nconst Expandable: FC<ExpandableProps> = props => {\n    const t = useTranslation();\n    const [expanded, setExpanded] = useState(true);\n    const shouldExpand = props.expanded && expanded;\n    const buttonText = shouldExpand ? undefined : t(\"change\");\n    const onPress = () => {\n        setExpanded(true);\n        props.onExpand?.();\n    };\n\n    return (\n        <View style={props.style}>\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\n        </View>\n    );\n};\n\nexport default Expandable;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const t = useTranslation();\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={t(\"approve\") + \" \" + (props.token?.symbol || \"\")}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import * as React from 'react';\nimport type {\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  PressableStateCallbackType,\n  FlatListProps,\n  VirtualizedListProps,\n  ScrollViewProps,\n} from 'react-native';\n\nimport {\n  View,\n  Pressable as NativePressable,\n  ScrollView as NativeScrollView,\n  FlatList as NativeFlatList,\n  VirtualizedList as NativeVirtualizedList,\n  //@ts-ignore\n} from 'react-native-web';\n\nconst isServer =\n  typeof process !== 'undefined' &&\n  process.release &&\n  process.release.name === 'node';\n\nconst hoverListener = createHoverListener();\n\ninterface PressableStateCallbackTypeWeb extends PressableStateCallbackType {\n  focused?: boolean;\n  hovered?: boolean;\n}\n\ntype ChildrenType =\n  | React.ReactNode\n  | ((state: PressableStateCallbackTypeWeb) => React.ReactNode);\n\ntype StylesType =\n  | StyleProp<ViewStyle>\n  | ((state: PressableStateCallbackTypeWeb) => StyleProp<ViewStyle>);\n\ninterface HoverableProps extends ViewProps {\n  children:\n    | React.ReactNode\n    | ((state: { hovered: boolean }) => React.ReactNode);\n}\n\ninterface PressableProps extends Omit<ViewProps, 'style'> {\n  children: ChildrenType;\n  style?: StylesType;\n}\n\nexport function Hoverable({ children, ...rest }: HoverableProps) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <View\n      ref={hostRef}\n      children={\n        typeof children === 'function' ? children({ hovered }) : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction PressableWithoutRef(\n  { style, children, ...rest }: PressableProps,\n  forwardedRef: any\n) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n\n  const setRef = setAndForwardRef({\n    getForwardedRef: () => forwardedRef,\n    setLocalRef: (hostNode: any) => {\n      hostRef.current = hostNode;\n    },\n  });\n\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <NativePressable\n      //@ts-ignore\n      ref={setRef}\n      style={(interactionState: any) =>\n        typeof style === 'function'\n          ? style({ ...interactionState, hovered })\n          : style\n      }\n      children={(interactionState: any) =>\n        typeof children === 'function'\n          ? children({ ...interactionState, hovered })\n          : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction containsEvent(parent: any, clickTarget: any) {\n  if (parent === clickTarget) {\n    return true;\n  }\n  if (!parent) {\n    return false;\n  }\n  for (let child of parent.childNodes) {\n    if (containsEvent(child, clickTarget)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction createHoverListener() {\n  let hasMouse = isServer ? false : window.matchMedia('(pointer:fine)').matches;\n\n  let refs = new Map<any, (h: boolean) => any>();\n  let previousHoverFunc: undefined | ((h: boolean) => any);\n  let mousePosition = {\n    x: 0,\n    y: 0,\n  };\n\n  function hover(target: any) {\n    // hover is targeted directly\n    let hoverFunc = refs.get(target);\n\n    // let's try to see if any of the children of the hover event are hovered\n    if (!hoverFunc) {\n      for (let r of refs.keys()) {\n        if (containsEvent(r, target)) {\n          hoverFunc = refs.get(r);\n        }\n      }\n    }\n\n    previousHoverFunc && previousHoverFunc(false);\n    hoverFunc && hoverFunc(true);\n\n    // cache the previous hover so we can un-hover this later on\n    previousHoverFunc = hoverFunc;\n  }\n\n  function hoverEvent(event: any) {\n    hover(event.target);\n  }\n\n  function unhover() {\n    previousHoverFunc && previousHoverFunc(false);\n  }\n\n  function captureMousePosition(event: any) {\n    mousePosition.x = event.pageX;\n    mousePosition.y = event.pageY;\n  }\n\n  // touch devices have a bug where the onMouseOver is handled while it should not\n  // if the user would click something it keeps hovered while it should unhover\n  // so only listen to these events if the device has a mouse\n  if (hasMouse) {\n    document.onmouseover = hoverEvent;\n    document.onmousemove = captureMousePosition;\n    document.ontouchstart = unhover;\n    document.ontouchend = unhover;\n    document.ontouchcancel = unhover;\n    document.ontouchmove = unhover;\n  }\n\n  function add(ref: any, setHovered: any) {\n    refs.set(ref, setHovered);\n  }\n\n  function remove(ref: any) {\n    refs.delete(ref);\n  }\n\n  return {\n    add,\n    remove,\n    mousePosition,\n    hover,\n  };\n}\n\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }: any) {\n  return function forwardRef(ref: React.ElementRef<any>) {\n    const forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nfunction enhanceScrollView(WrappedComponent: any) {\n  const EnhancedScrollView = ({\n    forwardedRef,\n    onScroll,\n    scrollEventThrottle,\n    ...rest\n  }: any) => {\n    const onScrollInner = (e: any) => {\n      onScroll && onScroll(e);\n      const { mousePosition, hover } = hoverListener;\n      hover(document.elementFromPoint(mousePosition.x, mousePosition.y));\n    };\n    return (\n      <WrappedComponent\n        ref={forwardedRef}\n        onScroll={onScrollInner}\n        scrollEventThrottle={scrollEventThrottle || 25}\n        {...rest}\n      />\n    );\n  };\n\n  return React.forwardRef((props, ref) => {\n    return <EnhancedScrollView {...props} forwardedRef={ref} />;\n  });\n}\n\nexport const Pressable = React.forwardRef(PressableWithoutRef);\nexport const ScrollView = enhanceScrollView(\n  NativeScrollView\n) as React.ElementType<ScrollViewProps>;\nexport const FlatList = enhanceScrollView(NativeFlatList) as React.ElementType<\n  FlatListProps<unknown>\n>;\nexport const VirtualizedList = enhanceScrollView(\n  NativeVirtualizedList\n) as React.ElementType<VirtualizedListProps<unknown>>;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isETH, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    placeholder?: string;\n    address: string;\n    onAddressChanged: (address: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenAddressInput: FC<TokenInputProps> = props => {\n    const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.onAddressChanged) {\n                try {\n                    props.onAddressChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAddressChanged(text);\n                    }\n                }\n            }\n        },\n        [ props.onAddressChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.address}\n                    onChangeText={onChangeText}\n                    placeholder={props.placeholder}\n                    keyboardType={\"default\"}\n                    autoFocus={props.autoFocus || false}\n                    inputStyle={{ marginHorizontal: Spacing.tiny }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 15,\n                        paddingBottom: 2\n                    }}\n                />\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(() => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (isETH(props.token)) {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount]);\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 12 : 24 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || (IS_DESKTOP ? \"MAX \" + props.token.symbol : \"MAX\")}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n            />\n        </View>\n    );\n};\n\nexport default TokenAddressInput;\n","export function Base64() {\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    this.encode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.encodeIgnoreUtf8 = inputBytes => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        while (i < inputBytes.length) {\n            chr1 = inputBytes[i++];\n            chr2 = inputBytes[i++];\n            chr3 = inputBytes[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.decode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n\n        return this._utf8_decode(output);\n    }\n\n    this.decodeToByteArray = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n\n        return this._out2ByteArray(output);\n    }\n\n    this._out2ByteArray = utftext => {\n        const byteArray = new Array(utftext.length);\n\n        let i = 0;\n        let c = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            byteArray[i] = c;\n            i++;\n        }\n\n        return byteArray;\n    }\n\n    this._utf8_encode = string => {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utftext = \"\";\n\n        for (let n = 0; n < string.length; n++) {\n            const c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    this._utf8_decode = utftext => {\n        let string = \"\";\n        let i = 0;\n        let c = 0;\n        let c2 = 0;\n        let c3 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n}\n","import {Base64} from './base64';\n\nexport function byte2hexStr(byte) {\n    if (typeof byte !== 'number')\n        throw new Error('Input must be a number');\n\n    if (byte < 0 || byte > 255)\n        throw new Error('Input must be a byte');\n\n    const hexByteMap = '0123456789ABCDEF';\n\n    let str = '';\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n\n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length === 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else {\n            str += String.fromCharCode(arr[i]);\n        }\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.replace(/^0x/, '').split('');\n    let out = '';\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        let tmp = `0x${arr[i * 2]}${arr[i * 2 + 1]}`;\n        out += String.fromCharCode(tmp);\n    }\n\n    return out;\n}\n\nexport function byteArray2hexStr(byteArray) {\n    let str = '';\n\n    for (let i = 0; i < (byteArray.length); i++)\n        str += byte2hexStr(byteArray[i]);\n\n    return str;\n}\n\nexport function base64DecodeFromString(string64) {\n    return new Base64().decodeToByteArray(string64);\n}\n\nexport function base64EncodeToString(bytes) {\n    const b = new Base64();\n    const string64 = b.encodeIgnoreUtf8(bytes);\n\n    return string64\n}\n\n","import {\n    byte2hexStr,\n    bytesToString,\n    hextoString,\n    byteArray2hexStr,\n    base64DecodeFromString,\n    base64EncodeToString\n} from './bytes';\n\nexport function bin2String(array) {\n    // TODO Do we need this alias?\n    return bytesToString(array);\n}\n\nexport function arrayEquals(array1, array2, strict) {\n    if (array1.length != array2.length)\n        return false;\n\n    let i;\n\n    for (i = 0; i < array1.length; i++) {\n        if (strict) {\n            if (array1[i] != array2[i])\n                return false;\n        } else if (JSON.stringify(array1[i]) != JSON.stringify(array2[i]))\n            return false;\n    }\n\n    return true;\n}\n\nexport function stringToBytes(str) {\n\n    if (typeof str !== 'string')\n        throw new Error('The passed string is not a string')\n\n    const bytes = new Array();\n    let len;\n    let c;\n\n    len = str.length;\n\n    for (let i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if (c >= 0x010000 && c <= 0x10FFFF) {\n            bytes.push(((c >> 18) & 0x07) | 0xF0);\n            bytes.push(((c >> 12) & 0x3F) | 0x80);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000800 && c <= 0x00FFFF) {\n            bytes.push(((c >> 12) & 0x0F) | 0xE0);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000080 && c <= 0x0007FF) {\n            bytes.push(((c >> 6) & 0x1F) | 0xC0);\n            bytes.push((c & 0x3F) | 0x80);\n        } else bytes.push(c & 0xFF);\n    }\n\n    return bytes;\n}\n\nexport {byte2hexStr, bytesToString, hextoString, byteArray2hexStr, base64DecodeFromString, base64EncodeToString}\n\nexport function hexChar2byte(c) {\n    let d;\n\n    if (c >= 'A' && c <= 'F')\n        d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    else if (c >= 'a' && c <= 'f')\n        d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    else if (c >= '0' && c <= '9')\n        d = c.charCodeAt(0) - '0'.charCodeAt(0);\n\n    if (typeof d === 'number')\n        return d;\n    else\n        throw new Error('The passed hex char is not a valid hex char');\n}\n\nexport function isHexChar(c) {\n    if ((c >= 'A' && c <= 'F') ||\n        (c >= 'a' && c <= 'f') ||\n        (c >= '0' && c <= '9')) {\n        return 1;\n    }\n\n    return 0;\n}\n\nexport function hexStr2byteArray(str) {\n    if (typeof str !== 'string')\n        throw new Error('The passed string is not a string')\n\n    const byteArray = Array();\n    let d = 0;\n    let j = 0;\n    let k = 0;\n\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charAt(i);\n\n        if (isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n\n            if (0 === (j % 2)) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        } else\n            throw new Error('The passed hex char is not a valid hex string')\n    }\n\n    return byteArray;\n}\n\n//yyyy-MM-DD HH-mm-ss\nexport function strToDate(str) {\n\n    if (!/^\\d{4}-\\d{2}-\\d{2}( \\d{2}-\\d{2}-\\d{2}|)/.test(str))\n        throw new Error('The passed date string is not valid')\n\n    const tempStrs = str.split(\" \");\n    const dateStrs = tempStrs[0].split(\"-\");\n    const year = parseInt(dateStrs[0], 10);\n    const month = parseInt(dateStrs[1], 10) - 1;\n    const day = parseInt(dateStrs[2], 10);\n\n    if (tempStrs.length > 1) {\n        const timeStrs = tempStrs[1].split(\"-\");\n        const hour = parseInt(timeStrs[0], 10);\n        const minute = parseInt(timeStrs[1], 10);\n        const second = parseInt(timeStrs[2], 10);\n\n        return new Date(year, month, day, hour, minute, second);\n    }\n\n    return new Date(year, month, day);\n}\n\nexport function isNumber(c) {\n    if (c >= '0' && c <= '9')\n        return 1;\n\n    return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nexport function getStringType(str) {\n    if (null == str)\n        return -1;\n\n    if (typeof (str) != 'string')\n        return -1;\n\n    if (str.length == 0 || str == \"\")\n        return -1;\n\n    let i = 0;\n\n    // TODO Should we return 1 if someone passes a full, 42-chars long address?\n    // if (str.length == 42 && /^41/.test(str)) {\n    //     for (; i < 40; i++) {\n    //         var c = str.charAt(i+2);\n    //\n    //         if (!isHexChar(c))\n    //             break;\n    //     }\n    // } else\n    if (str.length == 40) {\n        for (; i < 40; i++) {\n            var c = str.charAt(i);\n\n            if (!isHexChar(c))\n                break;\n        }\n    }\n\n    if (i == 40)\n        return 1; //40 Hex, Address\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (!isNumber(c))\n            break;\n    }\n\n    if (i == str.length)\n        return 2; // All Decimal number, BlockNumber\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (c > ' ')\n            return 3; // At least one visible character\n    }\n\n    return -1;\n}\n","const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {};\n\nfor (let i = 0; i < ALPHABET.length; i++)\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n\nconst BASE = 58;\n\nexport function encode58(buffer) {\n    if (buffer.length === 0)\n        return '';\n\n    let i;\n    let j;\n\n    const digits = [0];\n\n    for (i = 0; i < buffer.length; i++) {\n        for (j = 0; j < digits.length; j++)\n            digits[j] <<= 8;\n\n        digits[0] += buffer[i];\n        let carry = 0;\n\n        for (j = 0; j < digits.length; ++j) {\n            digits[j] += carry;\n            carry = (digits[j] / BASE) | 0;\n            digits[j] %= BASE\n        }\n\n        while (carry) {\n            digits.push(carry % BASE);\n            carry = (carry / BASE) | 0\n        }\n    }\n\n    for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++)\n        digits.push(0);\n\n    return digits.reverse().map(digit => ALPHABET[digit]).join('');\n}\n\nexport function decode58(string) {\n    if (string.length === 0)\n        return [];\n\n    let i;\n    let j;\n\n    const bytes = [0];\n\n    for (i = 0; i < string.length; i++) {\n        const c = string[i];\n\n        if (!(c in ALPHABET_MAP))\n            throw new Error('Non-base58 character');\n\n        for (j = 0; j < bytes.length; j++)\n            bytes[j] *= BASE;\n\n        bytes[0] += ALPHABET_MAP[c];\n        let carry = 0;\n\n        for (j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n        }\n\n        while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n        }\n    }\n\n    for (i = 0; string[i] === '1' && i < string.length - 1; i++)\n        bytes.push(0);\n\n    return bytes.reverse();\n}\n","import { utils } from \"ethers\";\n\nconst keccak256 = utils.keccak256;\nconst sha256 = utils.sha256;\nconst toUtf8Bytes = utils.toUtf8Bytes;\nconst toUtf8String = utils.toUtf8String;\nconst recoverAddress = utils.recoverAddress;\nconst SigningKey = utils.SigningKey;\nconst AbiCoder = utils.AbiCoder;\n\nexport {\n    keccak256,\n    sha256,\n    toUtf8Bytes,\n    toUtf8String,\n    recoverAddress,\n    SigningKey,\n    AbiCoder,\n};\n","import {ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE, ADDRESS_SIZE} from './address';\nimport {base64EncodeToString} from './code';\nimport {base64DecodeFromString, hexStr2byteArray} from './code';\nimport {encode58, decode58} from './base58';\nimport {byte2hexStr, byteArray2hexStr} from './bytes';\nimport {ec as EC} from 'elliptic';\nimport {keccak256, sha256} from './ethersUtils';\n\nexport function getBase58CheckAddress(addressBytes) {\n    const hash0 = SHA256(addressBytes);\n    const hash1 = SHA256(hash0);\n\n    let checkSum = hash1.slice(0, 4);\n    checkSum = addressBytes.concat(checkSum);\n\n    return encode58(checkSum);\n}\n\nexport function decodeBase58Address(base58Sting) {\n    if (typeof (base58Sting) != 'string')\n        return false;\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    let address = decode58(base58Sting);\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n\n    address = address.slice(0, offset);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return address;\n    }\n\n    throw new Error('Invalid address provided');\n}\n\nexport function signTransaction(priKeyBytes, transaction) {\n    if (typeof priKeyBytes === 'string')\n        priKeyBytes = hexStr2byteArray(priKeyBytes);\n\n    const txID = transaction.txID;\n    const signature = ECKeySign(hexStr2byteArray(txID), priKeyBytes);\n\n    if (Array.isArray(transaction.signature)) {\n        if (!transaction.signature.includes(signature))\n            transaction.signature.push(signature);\n    } else\n        transaction.signature = [signature];\n    return transaction;\n}\n\nexport function arrayToBase64String(a) {\n    return btoa(String.fromCharCode(...a));\n}\n\nexport function signBytes(privateKey, contents) {\n    if (typeof privateKey === 'string')\n        privateKey = hexStr2byteArray(privateKey);\n\n    const hashBytes = SHA256(contents);\n    const signBytes = ECKeySign(hashBytes, privateKey);\n\n    return signBytes;\n}\n\nexport function getRowBytesFromTransactionBase64(base64Data) {\n    const bytesDecode = base64DecodeFromString(base64Data);\n    const transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n    const raw = transaction.getRawData();\n\n    return raw.serializeBinary();\n}\n\nexport function genPriKey() {\n    const ec = new EC('secp256k1');\n    const key = ec.genKeyPair();\n    const priKey = key.getPrivate();\n\n    let priKeyHex = priKey.toString('hex');\n\n    while (priKeyHex.length < 64) {\n        priKeyHex = `0${priKeyHex}`;\n    }\n\n    return hexStr2byteArray(priKeyHex);\n}\n\nexport function computeAddress(pubBytes) {\n    if (pubBytes.length === 65)\n        pubBytes = pubBytes.slice(1);\n\n    const hash = keccak256(pubBytes).toString().substring(2);\n    const addressHex = ADDRESS_PREFIX + hash.substring(24);\n\n    return hexStr2byteArray(addressHex);\n}\n\nexport function getAddressFromPriKey(priKeyBytes) {\n    let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    return computeAddress(pubBytes);\n}\n\nexport function decode58Check(addressStr) {\n    const decodeCheck = decode58(addressStr);\n\n    if (decodeCheck.length <= 4)\n        return false;\n\n    const decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n    const hash0 = SHA256(decodeData);\n    const hash1 = SHA256(hash0);\n\n    if (hash1[0] === decodeCheck[decodeData.length] &&\n        hash1[1] === decodeCheck[decodeData.length + 1] &&\n        hash1[2] === decodeCheck[decodeData.length + 2] &&\n        hash1[3] === decodeCheck[decodeData.length + 3]) {\n        return decodeData;\n    }\n\n    return false;\n}\n\nexport function isAddressValid(base58Str) {\n    if (typeof (base58Str) !== 'string')\n        return false;\n\n    if (base58Str.length !== ADDRESS_SIZE)\n        return false;\n\n    let address = decode58(base58Str);\n\n    if (address.length !== 25)\n        return false;\n\n    if (address[0] !== ADDRESS_PREFIX_BYTE)\n        return false;\n\n    const checkSum = address.slice(21);\n    address = address.slice(0, 21);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return true\n    }\n\n    return false;\n}\n\nexport function getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n\n    return getBase58CheckAddress(addressBytes);\n}\n\nexport function getHexStrAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressHex = byteArray2hexStr(addressBytes);\n\n    return addressHex;\n}\n\nexport function getAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressBase64 = base64EncodeToString(addressBytes);\n\n    return addressBase64;\n}\n\nexport function getPubKeyFromPriKey(priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const pubkey = key.getPublic();\n    const x = pubkey.x;\n    const y = pubkey.y;\n\n    let xHex = x.toString('hex');\n\n    while (xHex.length < 64) {\n        xHex = `0${xHex}`;\n    }\n\n    let yHex = y.toString('hex');\n\n    while (yHex.length < 64) {\n        yHex = `0${yHex}`;\n    }\n\n    const pubkeyHex = `04${xHex}${yHex}`;\n    const pubkeyBytes = hexStr2byteArray(pubkeyHex);\n\n    return pubkeyBytes;\n}\n\nexport function ECKeySign(hashBytes, priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const signature = key.sign(hashBytes);\n    const r = signature.r;\n    const s = signature.s;\n    const id = signature.recoveryParam;\n\n    let rHex = r.toString('hex');\n\n    while (rHex.length < 64) {\n        rHex = `0${rHex}`;\n    }\n\n    let sHex = s.toString('hex');\n\n    while (sHex.length < 64) {\n        sHex = `0${sHex}`;\n    }\n\n    const idHex = byte2hexStr(id);\n    const signHex = rHex + sHex + idHex;\n\n    return signHex;\n}\n\nexport function SHA256(msgBytes) {\n    const msgHex = byteArray2hexStr(msgBytes);\n    const hashHex = sha256('0x' + msgHex).replace(/^0x/, '')\n    return hexStr2byteArray(hashHex);\n}\n\nexport function passwordToAddress(password) {\n    const com_priKeyBytes = base64DecodeFromString(password);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function pkToAddress(privateKey) {\n    const com_priKeyBytes = hexStr2byteArray(privateKey);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n","export const ADDRESS_SIZE = 34;\nexport const ADDRESS_PREFIX = \"41\";\nexport const ADDRESS_PREFIX_BYTE = 0x41;\nexport const ADDRESS_PREFIX_REGEX = /^(41)/;\n","import {byteArray2hexStr} from './bytes';\nimport {\n    getBase58CheckAddress,\n    genPriKey,\n    getAddressFromPriKey,\n    getPubKeyFromPriKey\n} from './crypto';\n\nexport function generateAccount() {\n    const priKeyBytes = genPriKey();\n    const pubKeyBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = getAddressFromPriKey(priKeyBytes);\n\n    const privateKey = byteArray2hexStr(priKeyBytes);\n    const publicKey = byteArray2hexStr(pubKeyBytes);\n\n    return {\n        privateKey,\n        publicKey,\n        address: {\n            base58: getBase58CheckAddress(addressBytes),\n            hex: byteArray2hexStr(addressBytes)\n        }\n    }\n}\n","import * as accounts from './accounts';\nimport * as base58 from './base58';\nimport * as bytes from './bytes';\nimport * as crypto from './crypto';\nimport * as code from './code';\n// import * as abi from './abi';\nimport * as ethersUtils from './ethersUtils';\n\n// import validator from 'validator';\n// import BigNumber from 'bignumber.js';\nimport { BigNumber } from \"ethers\";\nimport {ADDRESS_PREFIX} from './address';\n\nconst utils = {\n    // isValidURL(url) {\n    //     if (typeof url !== 'string')\n    //         return false;\n    //     return validator.isURL(url.toString(), {\n    //         protocols: ['http', 'https'],\n    //         require_tld: false\n    //     });\n    // },\n\n    isObject(obj) {\n        return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n    },\n\n    isArray(array) {\n        return Array.isArray(array);\n    },\n\n    isJson(string) {\n        try {\n            return !!JSON.parse(string);\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    isBoolean(bool) {\n        return typeof bool === 'boolean';\n    },\n\n    isBigNumber(number) {\n        return number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n    },\n\n    isString(string) {\n        return typeof string === 'string' || (string && string.constructor && string.constructor.name === 'String');\n    },\n\n    isFunction(obj) {\n        return typeof obj === 'function';\n    },\n\n    isHex(string) {\n        return (typeof string === 'string'\n            && !isNaN(parseInt(string, 16))\n            && /^(0x|)[a-fA-F0-9]+$/.test(string));\n    },\n\n    isInteger(number) {\n        if (number === null)\n            return false\n        return Number.isInteger(\n            Number(number)\n        );\n    },\n\n    hasProperty(obj, property) {\n        return Object.prototype.hasOwnProperty.call(obj, property);\n    },\n\n    hasProperties(obj, ...properties) {\n        return properties.length && !properties.map(property => {\n            return this.hasProperty(obj, property)\n        }).includes(false);\n    },\n\n    mapEvent(event) {\n        let data = {\n            block: event.block_number,\n            timestamp: event.block_timestamp,\n            contract: event.contract_address,\n            name: event.event_name,\n            transaction: event.transaction_id,\n            result: event.result,\n            resourceNode: event.resource_Node || (event._unconfirmed ? 'fullNode' : 'solidityNode')\n        };\n        if (event._unconfirmed) {\n            data.unconfirmed = event._unconfirmed\n        }\n        if (event._fingerprint) {\n            data.fingerprint = event._fingerprint;\n        }\n        return data;\n    },\n\n    // parseEvent(event, {inputs: abi}) {\n    //     if (!event.result)\n    //         return event;\n\n    //     if (this.isObject(event.result)) {\n    //         for (var i = 0; i < abi.length; i++) {\n    //             let obj = abi[i];\n    //             if (obj.type == 'address' && obj.name in event.result)\n    //                 event.result[obj.name] = ADDRESS_PREFIX + event.result[obj.name].substr(2).toLowerCase();\n    //         }\n    //     } else if (this.isArray(event.result)) {\n    //         event.result = event.result.reduce((obj, result, index) => {\n    //             const {\n    //                 name,\n    //                 type\n    //             } = abi[index];\n\n    //             if (type == 'address')\n    //                 result = ADDRESS_PREFIX + result.substr(2).toLowerCase();\n\n    //             obj[name] = result;\n\n    //             return obj;\n    //         }, {});\n    //     }\n\n    //     return event;\n    // },\n\n    padLeft(input, padding, amount) {\n        let res = input.toString();\n\n        while (res.length < amount)\n            res = padding + res;\n\n        return res;\n    },\n\n    isNotNullOrUndefined(val) {\n        return val !== null && typeof val !== 'undefined';\n    },\n\n    async sleep(millis = 1000){\n        return new Promise(resolve => setTimeout(resolve, millis));\n    }\n}\n\nexport default {\n    ...utils,\n    code,\n    accounts,\n    base58,\n    bytes,\n    crypto,\n    ethersUtils\n};\n","import utils from './utils';\n\n\nfunction isAddress(address) {\n    if (!utils.isString(address))\n        return false;\n\n    // Convert HEX to Base58\n    if (address.length === 42) {\n        try {\n            return isAddress(\n                utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address) // it throws an error if the address starts with 0x\n                )\n            );\n        } catch (err) {\n            return false;\n        }\n    }\n    try {\n        return utils.crypto.isAddressValid(address);\n    } catch (err) {\n        return false;\n    }\n}\n\nexport default {isAddress}","import { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\n\nimport { BigNumber, ethers } from \"ethers\";\nimport sushiData from \"@sushiswap/sushi-data\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport LPTokenWithValue from \"../types/LPTokenWithValue\";\nimport { isWETH } from \"../utils\";\nimport { fetchLPTokenWithValue, fetchMyLPTokens, fetchMyPools } from \"../utils/fetch-utils\";\nimport useSDK from \"./useSDK\";\nimport { \n    viewUserInfo,\n    getFreeToTransferAmount,\n    totalSupplyOfSToken,\n    stakeActions, \n    fetchCurrentTotalStakedSTokenInpool,\n    viewTotalRewardInPoolFrom, \n    bridgeActions} \nfrom \"../utils/api-utils\";\nimport { BTCST,BBTC,BRIDGE} from \"../constants/contracts\";\nimport { getContract, parseBalance } from \"../utils\";\nimport TronUtil from \"../utils/tron\";\nimport {isProviderOnTron,getAsyncContract} from \"../utils/getContract\"\nimport {TronWebProvider} from \"../connectors/tron/tronWebProvider\"\nimport {TRON_ADDRESS_MAPPING} from \"../constants/contracts\"\n\nexport interface StakingState {\n    loading:boolean;\n    stoken?: Token;\n    \n    amount: string;\n    setAmount: (amount: string) => void;\n\n    otherSideAddress: string;\n    setOtherSideAddress: (amount: string) => void;\n    addressIsValid: boolean;\n\n    yourTotalSToken:ethers.BigNumber;\n    yourFreeToSendSToken:ethers.BigNumber;\n    yourSTokenStaked:ethers.BigNumber;\n\n    stokenAllowed: boolean;\n    setSTokenAllowed: (allowed: boolean) => void;\n    \n    totalSTokenSupply:ethers.BigNumber;\n\n    onEnter: () => Promise<void>;\n    entering: boolean;\n    onLeave: () => Promise<void>;\n    leaving: boolean;\n    localTokenSuffix:string;\n\n    txHappend:number;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useSTStakingState = () => {\n    const { provider,signer, address, getTokenAllowance,getTokenBalance,getTotalSupply} = useContext(EthersContext);\n\n    const [amount, setAmount] = useState(\"\");\n    const [otherSideAddress, setOtherSideAddress] = useState(\"\");\n    const { bridgeOut, claimOutBack } = bridgeActions();\n    const [stoken,setSToken] = useState<Token>();\n    const [loading,setloading] = useState(true);\n    const [stokenAllowed, setSTokenAllowed] = useState(false);\n\n    const [yourTotalSToken,setYourTotalSToken] = useState<ethers.BigNumber>();\n    const [yourFreeToSendSToken,setYourFreeToSendSToken] = useState<ethers.BigNumber>();\n    const [yourSTokenStaked,setYourSTokenStaked] = useState<ethers.BigNumber>();\n    const [totalSTokenSupply,setTotalSTokenSupply] = useState<ethers.BigNumber>();\n    const [localTokenSuffix,setLocalTokenSuffix] = useState<string>();\n    \n    const [entering, setEntering] = useState(false);\n    const [leaving, setLeaving] = useState(false);\n    const [addressIsValid,setAddressIsValid] = useState(false);\n    const [txHappend,setTxHappend] = useState<number>(0);\n\n    const sToken :Token ={\n        name: \"Standard BTC Hashrate Token\",\n        address: BTCST,\n        decimals: 18,\n        symbol: \"BTCST\",\n        logoURI: \"\",\n        balance: ethers.BigNumber.from(0)\n    };\n\n    useEffect(() => {\n        setLocalTokenSuffix(\"\");\n        setAmount(\"\");\n        setOtherSideAddress(\"\");\n        setSToken(sToken);\n        setloading(true);\n        setYourFreeToSendSToken(ethers.BigNumber.from(0));\n        setYourSTokenStaked(ethers.BigNumber.from(0));\n        setYourTotalSToken(ethers.BigNumber.from(0));\n        setTxHappend(0);\n    }, [address]);\n    useAsyncEffect(async()=>{\n        if (provider && signer && stoken) {\n            setSTokenAllowed(false);\n            setloading(true);\n            try{\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                let bridgeAddr=BRIDGE,btcstAddr=BTCST;\n                if (isProviderOnTron(provider)){\n                    bridgeAddr = TRON_ADDRESS_MAPPING[BRIDGE];\n                    btcstAddr = TRON_ADDRESS_MAPPING[BTCST];\n                }\n                const stokenAllowance = await getTokenAllowance(btcstAddr, bridgeAddr);\n                setSTokenAllowed(ethers.BigNumber.from(stokenAllowance).gte(minAllowance));\n\n                let freeToMove,account;\n                if (isProviderOnTron(provider)){\n                    const ppp = signer.provider.provider as TronWebProvider;\n                    account = ppp.getAccount().base58;\n                    freeToMove = await getTokenBalance(btcstAddr,account);\n                    setYourTotalSToken(freeToMove);\n                    setLocalTokenSuffix(\"TRC20\");\n                }else{\n                    freeToMove = await getFreeToTransferAmount(await signer.getAddress(),provider);\n                    account = signer.getAddress();\n                    setLocalTokenSuffix(\"BEP20\");\n                }\n                setYourFreeToSendSToken(await freeToMove);\n                if (!isProviderOnTron(provider)){\n                    const userInfoInFarm = await viewUserInfo(account,provider);\n                    const amnt = (await userInfoInFarm).amount;\n                    const lockedAmnt = (await userInfoInFarm).lockedAmount;\n                    setYourSTokenStaked(ethers.BigNumber.from(amnt).add(ethers.BigNumber.from(lockedAmnt)));\n                    setYourTotalSToken(await getTokenBalance(btcstAddr,account));\n                }\n                setTotalSTokenSupply(await getTotalSupply(btcstAddr));\n            }finally{\n                setloading(false);\n            }\n        }\n    },[provider,signer,stoken,txHappend]);\n    useAsyncEffect(async()=>{\n        if (provider && otherSideAddress) {\n            if (TronUtil.isAddress(otherSideAddress)){\n                setAddressIsValid(true);\n            }\n        }else{\n            setAddressIsValid(false);\n        }\n    },[provider,otherSideAddress]);\n\n    const onEnter = useCallback(async () => {\n        if (amount && stoken && signer && addressIsValid) {\n            setEntering(true);\n            try {\n                const parsed = parseBalance(amount, stoken.decimals);\n                \n                console.log(\"before entering\");\n                const tx = await bridgeOut(stoken.address,parsed,otherSideAddress,signer);\n                console.log(\"before wait\");\n                if (tx) {\n                    await tx.wait();\n                    // await updateTokens();\n                    setAmount(\"\");\n                    const txs = txHappend+1;\n                    setTxHappend(txs);\n                    console.log(\"after wait\");\n                }\n            } finally {\n                setEntering(false);\n            }\n        }\n    }, [amount, stoken, signer]);\n\n    const onLeave = useCallback(async () => {\n        if (amount && signer &&stoken) {\n            setLeaving(true);\n            try {\n                const parsed = BigNumber.from(amount);\n                const tx = await claimOutBack(await signer.getAddress(),parsed, signer);\n                if (tx) {\n                    await tx.wait();\n                    // await updateTokens();\n                    setAmount(\"\");\n                    const txs = txHappend+1;\n                    setTxHappend(txs);\n                }\n            } finally {\n                setLeaving(false);\n            }\n        }\n    }, [amount, stoken, signer]);\n    return {\n        loading,\n        amount,\n        setAmount,\n        otherSideAddress,\n        setOtherSideAddress,\n        addressIsValid,\n        stoken,\n        yourTotalSToken,\n        yourFreeToSendSToken,\n        yourSTokenStaked,\n        stokenAllowed,\n        setSTokenAllowed,\n        totalSTokenSupply,\n        onEnter,\n        entering,\n        onLeave,\n        leaving,\n        localTokenSuffix,\n        txHappend\n    };\n};\n\nexport default useSTStakingState;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nconst CloseIcon = () => {\n    const { accent } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={accent} style={{ marginLeft: 4 }} />;\n};\n\nexport default CloseIcon;\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps, ViewStyle } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n    containerStyle?: ViewStyle;\n}\n\nconst Selectable: FC<SelectableProps> = props => {\n    const { borderDark, accent, overlay } = useColors();\n    const { border } = useStyles();\n    const { background, backgroundLight } = useColors();\n    return (\n        <Hoverable style={props.containerStyle}>\n            {({ hovered }) => (\n                <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={props.onPress}>\n                    <View\n                        {...props}\n                        style={[\n                            {\n                                ...border({ color: props.selected ? accent : borderDark }),\n                                backgroundColor: hovered && !props.disabled ? backgroundLight : background\n                            },\n                            props.style\n                        ]}\n                    />\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nexport default Selectable;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nconst SelectIcon = () => {\n    const { accent } = useColors();\n    return <Icon type={\"material-community\"} name={\"chevron-right\"} color={accent} style={{ marginLeft: 4 }} />;\n};\n\nexport default SelectIcon;\n","import React, { FC } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\n\nexport interface Option {\n    key: string;\n    title: string;\n    description: string;\n}\n\nexport interface SelectProps {\n    title: string;\n    options: Option[];\n    option?: Option;\n    setOption: (option?: Option) => void;\n}\n\nconst Select: FC<SelectProps> = props => {\n    return (\n        <View>\n            <Expandable title={props.title} expanded={!props.option} onExpand={() => props.setOption()}>\n                {props.options.map(option => (\n                    <Item\n                        key={option.key}\n                        option={option}\n                        setOption={props.setOption}\n                        selected={option.key === props.option?.key}\n                    />\n                ))}\n            </Expandable>\n            {props.option && (\n                <Item option={props.option} setOption={props.setOption} selected={true} selectable={false} />\n            )}\n        </View>\n    );\n};\n\nconst Item = (props: {\n    option: Option;\n    setOption?: (option?: Option) => void;\n    selected: boolean;\n    selectable?: boolean;\n}) => {\n    return (\n        <Selectable\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}\n            style={{ paddingLeft: Spacing.small + Spacing.tiny, paddingRight: Spacing.small }}\n            selected={props.selected}\n            disabled={props.selectable}\n            onPress={() => props.setOption?.(props.selected ? undefined : props.option)}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <View style={{ flex: 1 }}>\n                    <Text fontWeight={\"regular\"}>{props.option.title}</Text>\n                    <Text note={true} style={{ marginTop: 4 }}>\n                        {props.option.description}\n                    </Text>\n                </View>\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default Select;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport const ITEM_SEPARATOR_HEIGHT = 10;\n\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\n\nexport default ItemSeparator;\n","import React, { useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport AmountMeta from \"../components/AmountMeta\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenAddressInput from \"../components/TokenAddressInput\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { BridgeSubMenu } from \"../components/web/WebSubMenu\";\nimport { BTCST,BTCSTFarm,BBTC,BRIDGE } from \"../constants/contracts\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport useSTStakingState, { StakingState } from \"../hooks/useSTBridgeState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\nimport useColors from \"../hooks/useColors\";\nimport { ethers } from \"ethers\";\nimport useLinker from \"../hooks/useLinker\";\nimport Select from \"../components/Select\";\nimport {Option} from \"../components/Select\";\nimport Input from \"../components/Input\";\nimport useStyles from \"../hooks/useStyles\";\nconst SHTStakeScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"ourBridge.title\")} />\n                    <Text light={true}>{t(\"ourBridge.desc\")\n                    // +t(\"or\")+\" \"+t(\"just-send-to-address\")+\" \"+BTCSTFarm\n                                    }</Text>\n                    <Staking />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n            <BridgeSubMenu />\n        </Screen>\n    );\n};\n\nconst Staking = () => {\n    const t = useTranslation();\n    const state = useSTStakingState();\n    const onPressEx = useLinker(\"https://www.binance.com/cn/trade/BTCST_USDT\", \"\", \"_blank\");\n    const onPressSwap = useLinker(\"https://exchange.pancakeswap.finance/\", \"\", \"_blank\");\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <STokenBalance state={state} />\n            <Border />\n            <AmountInput state={state} />\n            {state.stoken && state.yourTotalSToken?.isZero() && (\n                <View>\n                    <Notice text={t(\"you-dont-have-btcst\")} color={\"orange\"} style={{ marginTop: Spacing.small }} />\n                    <Button style={{marginTop:Spacing.tiny}} title={t(\"buy-on-binance\")} onPress={onPressEx}/>\n                    <Button style={{marginTop:Spacing.tiny}} title={t(\"buy-on-pancakeswap\")} onPress={onPressSwap}/>\n                </View>\n            )}\n            <BridgeSelect state={state}/>\n            <DestAddressInput state={state}/>\n            <StakeInfo state={state} />\n        </View>\n    );\n};\n\nconst STokenBalance = ({ state }: { state: StakingState }) => {\n    const t = useTranslation();\n    const {loading,yourTotalSToken,yourFreeToSendSToken,yourSTokenStaked,stokenAllowed,localTokenSuffix} = state;\n    const { textDark, textLight, placeholder } = useColors();\n    return (\n        <View>\n            {/* <Heading text={t(\"your-BTCTS\")} /> */}\n            <Text\n                style={{\n                    fontSize: IS_DESKTOP ? 28 : 20,\n                    marginBottom: Spacing.tiny,\n                    color: loading? textLight : textDark \n                }}>\n                {loading || !state.stoken || !yourTotalSToken? t(\"fetching\")\n                    :t(\"you-have\")+\" \"+formatBalance(yourTotalSToken, state.stoken.decimals)+\" BTCST-\" + localTokenSuffix\n                    }\n            </Text>\n            <Text\n                style={{\n                    fontSize: IS_DESKTOP ? 14 : 10,                    \n                    marginBottom: Spacing.tiny,\n                    color: loading? textLight : textDark \n                }}>\n                {loading || !state.stoken || !yourTotalSToken? \"\"\n                :t(\"ourBridge.free-to-bridge\")+\" \"+formatBalance(yourFreeToSendSToken, state.stoken.decimals)+\" \"\n                }\n            </Text>\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: StakingState }) => {\n    const t = useTranslation();\n    if (!state.stoken || state.yourTotalSToken.isZero()) {\n        return <Heading text={t(\"ourBridge.amount-to-bridge\")} disabled={true} />;\n    }\n    return (\n        <View>\n            <Heading text={t(\"ourBridge.amount-to-bridge\")} />\n            <TokenInput\n                token={state.stoken}\n                amount={state.amount}\n                onAmountChanged={state.setAmount}\n                autoFocus={IS_DESKTOP}\n            />\n        </View>\n    );\n};\n\nconst BridgeSelect = ({ state }: { state: StakingState }) => {\n    const t = useTranslation();\n    if (!state.stoken || state.yourTotalSToken.isZero()) {\n        return (<View></View>);\n    }\n    const {localTokenSuffix} = state;\n    let tron = {\n        key:\"tron\",title:t(\"ourBridge.tron\"),description:t(\"ourBridge.tron-network\")\n    } as Option;\n    let bsc =  {\n        key:\"bsc\",title:t(\"ourBridge.bsc\"),description:t(\"ourBridge.bsc-network\")\n    } as Option;\n    const OPTIONS:Option[] = [];\n    let option;\n    if (localTokenSuffix==\"TRC20\"){\n        OPTIONS.push(bsc);\n        option = bsc;\n    }else{\n        OPTIONS.push(tron);\n        option = tron;\n    }\n    \n    return (\n        <View  style={{\n            marginTop: Spacing.normal\n        }} >\n            <Select\n                title={t(\"ourBridge.selectTitle\")}\n                options={OPTIONS}\n                option={option}\n                setOption={(option)=>{}}\n            />\n        </View>\n    );\n};\n\nconst DestAddressInput = ({ state }: { state: StakingState }) => {\n    const { border } = useStyles();\n    const t = useTranslation();\n    if (!state.stoken || state.yourTotalSToken.isZero()) {\n        return (<View></View>);\n    }\n    const {localTokenSuffix} = state;\n    let option;\n    if (localTokenSuffix==\"TRC20\"){\n        option = \"0xE9...FF133\";\n    }else{\n        option = \"Ts**...deef3\";\n    }\n    return (\n        <View  style={{\n            marginTop: Spacing.tiny\n        }}>\n            <Heading text={t(\"ourBridge.destAddress\")} />\n            <TokenAddressInput\n                address={state.otherSideAddress}\n                placeholder={option}\n                onAddressChanged={state.setOtherSideAddress}                \n            />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst StakeInfo = ({ state }: { state: StakingState }) => {\n    const t = useTranslation();\n    const { textDark, textLight, placeholder } = useColors();\n    const BRIDGE_FEE = 0.00005;\n    const disabled =\n        !state.stoken ||\n        state.yourTotalSToken.isZero() ||\n        !state.yourSTokenStaked ||\n        isEmptyValue(state.amount);\n    let youGet = \"n/a\";        \n    if (!disabled && state.amount){\n        youGet = \"\"+(Number.parseInt(state.amount)-BRIDGE_FEE);\n    }\n    return (\n        <InfoBox>\n            {/* <AmountMeta\n                amount={suppose ? suppose.round(8).toString() : \"\"}\n                suffix={t(\"btcb-estimated\")}\n                disabled={disabled}\n            /> */}\n            <Text\n            style={{\n                fontSize: IS_DESKTOP ? 28 : 20,\n                marginBottom: Spacing.normal,\n                color: disabled ? placeholder : textLight\n            }}>\n            {disabled ? t(\"n/a\") : t(\"ourBridge.to-bridge-title\")}\n            </Text>\n            <Meta label={t(\"ourBridge.est-cost-time\")} text={\"10\"} suffix={\"mins\"} disabled={disabled} />\n            <Meta label={t(\"ourBridge.est-bridge-fee\")} text={BRIDGE_FEE+\"\"} suffix={\"BTCST (<0.05$)\"} disabled={disabled} />\n            <Meta label={t(\"ourBridge.est-final-get\")} text={youGet+\"\"} suffix={\"BTCST\"}disabled={disabled} />\n            {!state.addressIsValid &&\n                <Meta label={t(\"ourBridge.your-address\")} text={t(\"ourBridge.is-not-valid\")} suffix={\"\"}disabled={disabled} />\n            }\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\nconst Controls = ({ state }: { state: StakingState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.stoken || state.yourTotalSToken.isZero() || isEmptyValue(state.amount) ? (\n                <StakeButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.amount, state.stoken.decimals).gt(state.yourTotalSToken) ? (\n                <InsufficientBalanceButton symbol={state.stoken.symbol} />\n            ) : state.loading ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.stoken}\n                        spender={BRIDGE}\n                        onSuccess={() => state.setSTokenAllowed(true)}\n                        onError={setError}\n                        hidden={state.stokenAllowed}\n                    />\n                    <StakeButton state={state} onError={setError} disabled={!state.stokenAllowed || !state.addressIsValid} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst StakeButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: StakingState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const t = useTranslation();\n    const onPress = async () => {\n        onError({});\n        try {\n            await state.onEnter();\n            state.setAmount(\"\");\n        } catch (e) {\n            onError(e);\n            console.log(e);\n        }\n    };\n    return <Button title={t(\"ourBridge.bridge\")} loading={state.entering} onPress={onPress} disabled={disabled} />;\n};\n\nexport default SHTStakeScreen;\n"],"sourceRoot":""}